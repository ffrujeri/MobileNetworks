/*
 * Created on 20/10/2005
 * @author Gabi Kliot
 */
package guiTrace;

import java.io.IOException;
import java.io.OutputStreamWriter;
import java.util.Date;
import java.util.zip.GZIPOutputStream;

import jist.runtime.JistAPI;
import jist.swans.field.Field;

/**
 * The actual Javis trace class. It is bundeled to an output file upon creation
 * and handles TraceEvents during the simulation.
 */
public class JavisTrace extends Trace  implements JistAPI.DoNotRewrite{

   // private java.io.PrintWriter m_writer; 
	   private java.io.BufferedWriter m_writer; 

    /**
     * Create a new Javis guiTrace object that will write to the file with the
     * supplied name. If the name ends with ".gz", then the output will be
     * written in compressed form (Javis is capable of reading compressed 
     * input, NAM isn't, so beware).
     * Compressed output is recommended because guiTrace-files do get big.
     */
    public JavisTrace(String filename) throws IOException {
      super();
      if (filename.endsWith(".gz")){
          m_writer=new java.io.BufferedWriter(new OutputStreamWriter(
	         new GZIPOutputStream(new java.io.FileOutputStream(filename))));
      } else {
          m_writer=new java.io.BufferedWriter(new OutputStreamWriter(
	         new java.io.FileOutputStream(filename)));
      }
      
      		
    //      m_writer=new java.io.PrintWriter(filename);
      
    }


    public synchronized void writePreamble(int xAxis, int yAxis) throws IOException 
    {
      // Write a little comment at the beginning
      m_writer.write("# Trace file generated by Jist/Swans Version "+
              "1.0.6." + " at " + (new Date()));
      m_writer.newLine();
      
      m_writer.write("V -t * -v 1.0a5 -a 0");
      m_writer.newLine();
      
      m_writer.write("W -t * -x "+xAxis+" -y "+yAxis);
      m_writer.newLine();
      
      
      m_writer.write("A -t * -n 1 -p 0 -o 0xffffffff -c 31 -a 1");
      m_writer.newLine();
      m_writer.write("A -t * -h 1 -m 2147483647 -s 0");
      m_writer.newLine();
      /*  "n -t 0.0 -s 1000 -S UP -v circle -c red -x 0.0 -y 0.0 -z 3";
      "n -t 0.0 -s 2000 -S UP -v circle -c red -x 100.0 -y 0.0 -z 3";
      "n -t 0.0 -s 3000 -S UP -v circle -c red -x 100.0 -y 100.0 -z 3";
      "n -t 0.0 -s 4000 -S UP -v circle -c red -x 0.0 -y 100.0 -z 3";*/
      
    }

    public synchronized void handleEvent(TraceEvent e) throws IOException {
        String s = e.showYourself();
        
      
        System.out.println(s);
       
        m_writer.write(s);
        m_writer.newLine();
        
        
    }


    public synchronized void writePostamble() throws IOException {
      m_writer.close();
    }



    public static void drawGuiTrace(Field f)
    {
  	  
  	    //---------- Javis guiTrace ---------//
  		//guiTrace.Trace trace = null;
  		try {
  		  //  trace = new guiTrace.JavisTrace(fileName+ ".nam");
  		    //trace.writePreamble((int)f.getFieldDimensionX(),(int)f.getFieldDimesionY());
  		    //f.setTrace(trace);
  		    f.snapShot2Trace();
  		    
  		    //trace.writePostamble();
  		    
  		   // System.out.println("Create :javisTraceFile! -> OK!");
  		}
  		catch (IOException e) {
  		    System.out.println("Could not create TraceFile!");
  		}
  	    //---------- Javis guiTrace ---------//
    }
    
    public static void createTraceSetTrace(Field f, String fileName)
    {
    	guiTrace.Trace trace = null;
  	  
  	  //Wireless Range of mobile or static radios in this simulation environment
  	  int wirelessRangeX = 410;
 	  int wirelessRangeY = 410;
  		try {
  		    trace = new guiTrace.JavisTrace(fileName+ ".nam");
  		   // trace.writePreamble((int)f.getFieldDimensionX(),(int)f.getFieldDimesionY());
  		    trace.writePreamble(wirelessRangeX,wirelessRangeY);
  		    f.setTrace(trace);
  		    //f.snapShot2Trace();
  		    
  		    //trace.writePostamble();
  		    
  		    System.out.println("Create :TraceFile! -> OK!");
  		}
  		catch (IOException e) {
  		    System.out.println("Could not create TraceFile!");
  		}
  	    //---------- Javis guiTrace ---------//
  	  
    }  
    
    
}
